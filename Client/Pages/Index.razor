@page "/"
@page "/{UniqueName}"
@using System.Text.RegularExpressions;
@using HybridPages.Client.Shared.EditorComponents
@using HybridPages.Client.Shared.LayoutComponents
@using HybridPages.Client.State;
@using HybridPages.Shared.Enums;
@using HybridPages.Shared.Helpers;
@using HybridPages.Shared.Interfaces;
@using HybridPages.Shared.Models;
@using HybridPages.Shared.Models.Styling;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json;
@inject NavigationManager NavManager
@inject PageService _pageService

<div class="background-container" style="@_backgroundMeshCss">
	<div class="content-container">
		@if (_pageService.Page == null)
		{
			<article class="card">
				<p><em>Loading...</em></p>
			</article>
		}
		else
		{
			@foreach (var post in _pageService.Page.Posts)
			{
				<ContentSection post="@post"></ContentSection>
			}
		}
	</div>
</div>

@*@(JsonSerializer.Serialize(_pageService.Page, new JsonSerializerOptions() { WriteIndented = true }))*@

@code {
	[Parameter]
	public string? UniqueName { get; set; }
	private string _backgroundMeshCss { get; set; } = string.Empty;
	private bool _showBackgroundDesigner { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		_pageService.OnStateChange += StateHasChanged;
		if (UniqueName != null)
		{
			try
			{
				if (_pageService.Page != null)
				{
					if (_pageService.Page?.Style?.BackgroundType == BackgroundTypeEnum.Mesh && _pageService.Page?.Style?.BackgroundMesh != null)
						_backgroundMeshCss = BackgroundMeshToCss.GetBackgroundMeshCss(_pageService.Page.Style.BackgroundMesh);
				}
			}
			catch (AccessTokenNotAvailableException exception)
			{
				exception.Redirect();
			}
		}
		else
		{
			NavManager.NavigateTo("/start", forceLoad: true);
		}
	}

	public void SelectPost(Post post)
	{
		_pageService.SelectedPost = post;
		StateHasChanged();
	}
}