@using HybridPages.Client.State;
@using HybridPages.Shared.Enums;
@using HybridPages.Shared.Models.TextEditor;
@inject PageService _pageService;

@if (_pageService.SelectedTextLine == TextLine)
{
	<textarea class="text-editor" contenteditable="true" @bind-value="Content" @bind-value:event="oninput"></textarea>

	@if (TextLine.TextLineType == TextLineTypeEnum.Ul || TextLine.TextLineType == TextLineTypeEnum.Ol)
	{
		<button @onclick="@(() => AddChildItem(TextLineTypeEnum.Li))">Add List Item</button>
	}

		<button @onclick="@(() => FormatItem(TextLineTypeEnum.H1))">H1</button>
		<button @onclick="@(() => FormatItem(TextLineTypeEnum.P))">P</button>
		<button @onclick="@(() => FormatItem(TextLineTypeEnum.Ol))">Ordered List</button>
		<button @onclick="@(() => FormatItem(TextLineTypeEnum.Ul))">Unordered List</button>
		<button @onclick="@(() => AddNextItem(TextLineTypeEnum.P))">Add Item below</button>

}
else
{
		@((MarkupString)$"<{TextLine.TextLineType.ToString()}>")

		<span @onclick="(() => _pageService.SelectTextLine(TextLine))">@TextLine.Content</span>

		@foreach (var child in TextLine.ChildTextLines)
		{
			<RecursiveLongFormEditor TextLine="child"></RecursiveLongFormEditor>
		}
		@((MarkupString)$"</{TextLine.TextLineType.ToString()}>")
}

@code {
	[Parameter]
	public TextLine TextLine { get; set; }

	public string Content
	{
		get
		{
			return TextLine?.Content ?? "Content";
		}
		set
		{
			if (TextLine != null)
			{
				TextLine.Content = value;
				_pageService.NotifyStateChanged();
			}
		}
	}
	public void AddNextItem(TextLineTypeEnum type)
	{
		var index = _pageService.SelectedPost.ContentTextLines.IndexOf(TextLine);
		var newItem = new TextLine { TextLineType = type, Content = "testcontent" };
		_pageService.SelectedPost.ContentTextLines.Insert(index + 1, newItem);
		_pageService.SelectTextLine(newItem);
	}
	public void AddChildItem(TextLineTypeEnum type)
	{
		var newItem = new TextLine { TextLineType = type, Content = "testcontent" };
		TextLine.ChildTextLines.Add(newItem);
		_pageService.SelectTextLine(newItem);
	}
	public void FormatItem(TextLineTypeEnum type)
	{
		TextLine.TextLineType = type;
		_pageService.NotifyStateChanged();
	}
}